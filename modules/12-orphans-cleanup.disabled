#!/bin/bash
#
# Orphaned Packages Cleanup (10-19 priority range)
# Handles removal of orphaned packages to maintain system cleanliness

# Source utils if not already sourced
if ! command -v print_header &>/dev/null; then
    source "$(dirname "$(dirname "$(readlink -f "$0")")")/utils.sh"
fi

# Check if this module can run
check_supported() {
    command -v pacman &>/dev/null
    return $?
}

# Run the update process
run_update() {
    print_header "${TRASH_ICON} CHECKING FOR ORPHANED PACKAGES"
    
    # Find orphaned packages
    local orphans=$(pacman -Qdtq)
    if [ $? -ne 0 ]; then
        print_error "Failed to check for orphaned packages"
        return 1
    fi
    
    # Handle orphaned packages if found
    if [ ! -z "$orphans" ]; then
        print_status "${INFO_ICON}" "Found orphaned packages:"
        echo "$orphans"
        
        print_status "${SYNC_ICON}" "Removing orphaned packages..."
        if ! sudo pacman -Rns $orphans --noconfirm; then
            print_error "Failed to remove orphaned packages"
            return 1
        fi
        print_success "Orphaned packages removed successfully"
    else
        print_success "No orphaned packages found"
    fi
    
    return 0
}

# If script is run directly, check support and run
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    if check_supported; then
        run_update
    else
        echo "Module requirements not met"
        exit 1
    fi
fi
